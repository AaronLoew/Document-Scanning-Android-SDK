apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

def libraryVersionCode = 4
def libraryVersionName = "1.0.0"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode libraryVersionCode
        versionName libraryVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.res.srcDirs = ['src/main/res']
        main.manifest.srcFile 'src/main/AndroidManifest.xml'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    implementation "com.zynkware:opencv:4.4.0"

    implementation "androidx.camera:camera-camera2:1.0.0-beta10"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta10"
    implementation "androidx.camera:camera-view:1.0.0-alpha17"
    
    implementation 'com.github.tbruyelle:rxpermissions:0.12'

    implementation 'androidx.exifinterface:exifinterface:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation 'id.zelory:compressor:3.0.0'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    from fileTree(dir: 'src/libs', include: ['*.jar'])
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact androidSourcesJar

                groupId 'com.zynkware'
                artifactId 'document-scanning'
                version libraryVersionName
            }
        }
        repositories {
            maven {
                name = "ZynkwareDocumentScanning"
//                url = uri("https://maven.pkg.github.com/zynkware/Document-Scanning-Android-SDK")
//                credentials {
//                    username = githubProperties['gpr.usr']
//                    password = githubProperties['gpr.key']
//                }
            }
        }
    }
}